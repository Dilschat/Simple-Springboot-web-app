// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: assaymetadata.proto

package com.example.simple_biosamples_client.models.ga4ghmetadata;

public final class Assaymetadata {
    private Assaymetadata() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface ExperimentOrBuilder extends
            // @@protoc_insertion_point(interface_extends:Experiment)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The experiment ID
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        String getId();

        /**
         * <pre>
         * The experiment ID
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        com.google.protobuf.ByteString
        getIdBytes();

        /**
         * <pre>
         * The name of the experiment.
         * </pre>
         *
         * <code>string name = 2;</code>
         */
        String getName();

        /**
         * <pre>
         * The name of the experiment.
         * </pre>
         *
         * <code>string name = 2;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         * A description of the experiment.
         * </pre>
         *
         * <code>string description = 3;</code>
         */
        String getDescription();

        /**
         * <pre>
         * A description of the experiment.
         * </pre>
         *
         * <code>string description = 3;</code>
         */
        com.google.protobuf.ByteString
        getDescriptionBytes();

        /**
         * <pre>
         * The time at which the record of this experiment was last updated.
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        String getUpdated();

        /**
         * <pre>
         * The time at which the record of this experiment was last updated.
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        com.google.protobuf.ByteString
        getUpdatedBytes();

        /**
         * <pre>
         * The time at which this experiment was performed.
         * Granularity here is variable (e.g. date only).
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
         * </pre>
         *
         * <code>string run_time = 6;</code>
         */
        String getRunTime();

        /**
         * <pre>
         * The time at which this experiment was performed.
         * Granularity here is variable (e.g. date only).
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
         * </pre>
         *
         * <code>string run_time = 6;</code>
         */
        com.google.protobuf.ByteString
        getRunTimeBytes();

        /**
         * <pre>
         * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
         * </pre>
         *
         * <code>string molecule = 7;</code>
         */
        String getMolecule();

        /**
         * <pre>
         * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
         * </pre>
         *
         * <code>string molecule = 7;</code>
         */
        com.google.protobuf.ByteString
        getMoleculeBytes();

        /**
         * <pre>
         * The experiment technique or strategy applied to the sample.
         * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
         * </pre>
         *
         * <code>string strategy = 8;</code>
         */
        String getStrategy();

        /**
         * <pre>
         * The experiment technique or strategy applied to the sample.
         * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
         * </pre>
         *
         * <code>string strategy = 8;</code>
         */
        com.google.protobuf.ByteString
        getStrategyBytes();

        /**
         * <pre>
         * The method used to enrich the target. (e.g. immunoprecipitation, size
         * fractionation, MNase digestion)
         * </pre>
         *
         * <code>string selection = 9;</code>
         */
        String getSelection();

        /**
         * <pre>
         * The method used to enrich the target. (e.g. immunoprecipitation, size
         * fractionation, MNase digestion)
         * </pre>
         *
         * <code>string selection = 9;</code>
         */
        com.google.protobuf.ByteString
        getSelectionBytes();

        /**
         * <pre>
         * The name of the library used as part of this experiment.
         * </pre>
         *
         * <code>string library = 10;</code>
         */
        String getLibrary();

        /**
         * <pre>
         * The name of the library used as part of this experiment.
         * </pre>
         *
         * <code>string library = 10;</code>
         */
        com.google.protobuf.ByteString
        getLibraryBytes();

        /**
         * <pre>
         * The configuration of sequenced reads. (e.g. Single or Paired).
         * </pre>
         *
         * <code>string library_layout = 11;</code>
         */
        String getLibraryLayout();

        /**
         * <pre>
         * The configuration of sequenced reads. (e.g. Single or Paired).
         * </pre>
         *
         * <code>string library_layout = 11;</code>
         */
        com.google.protobuf.ByteString
        getLibraryLayoutBytes();

        /**
         * <pre>
         * The instrument model used as part of this experiment.
         * This maps to sequencing technology in BAM.
         * </pre>
         *
         * <code>string instrument_model = 12;</code>
         */
        String getInstrumentModel();

        /**
         * <pre>
         * The instrument model used as part of this experiment.
         * This maps to sequencing technology in BAM.
         * </pre>
         *
         * <code>string instrument_model = 12;</code>
         */
        com.google.protobuf.ByteString
        getInstrumentModelBytes();

        /**
         * <pre>
         * The data file generated by the instrument.
         * TODO: This isn't actually a file is it?
         * Should this be `instrumentData` instead?
         * </pre>
         *
         * <code>string instrument_data_file = 13;</code>
         */
        String getInstrumentDataFile();

        /**
         * <pre>
         * The data file generated by the instrument.
         * TODO: This isn't actually a file is it?
         * Should this be `instrumentData` instead?
         * </pre>
         *
         * <code>string instrument_data_file = 13;</code>
         */
        com.google.protobuf.ByteString
        getInstrumentDataFileBytes();

        /**
         * <pre>
         * Name of the laboratory where this experiment was performed.
         * </pre>
         *
         * <code>string sequencing_center = 14;</code>
         */
        String getSequencingCenter();

        /**
         * <pre>
         * Name of the laboratory where this experiment was performed.
         * </pre>
         *
         * <code>string sequencing_center = 14;</code>
         */
        com.google.protobuf.ByteString
        getSequencingCenterBytes();

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        boolean hasLocation();

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        Shared.GeoLocation getLocation();

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        Shared.GeoLocationOrBuilder getLocationOrBuilder();

        /**
         * <pre>
         * The platform unit used as part of this experiment. This is a
         * flowcell-barcode
         * or slide unique identifier.
         * </pre>
         *
         * <code>string platform_unit = 15;</code>
         */
        String getPlatformUnit();

        /**
         * <pre>
         * The platform unit used as part of this experiment. This is a
         * flowcell-barcode
         * or slide unique identifier.
         * </pre>
         *
         * <code>string platform_unit = 15;</code>
         */
        com.google.protobuf.ByteString
        getPlatformUnitBytes();

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        boolean hasAttributes();

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        Shared.Attributes getAttributes();

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        Shared.AttributesOrBuilder getAttributesOrBuilder();
    }

    /**
     * <pre>
     * An experimental preparation of a sample.
     * </pre>
     * <p>
     * Protobuf type {@code Experiment}
     */
    public static final class Experiment extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:Experiment)
            ExperimentOrBuilder {
        // Use Experiment.newBuilder() to construct.
        private Experiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Experiment() {
            id_ = "";
            name_ = "";
            description_ = "";
            updated_ = "";
            runTime_ = "";
            molecule_ = "";
            strategy_ = "";
            selection_ = "";
            library_ = "";
            libraryLayout_ = "";
            instrumentModel_ = "";
            instrumentDataFile_ = "";
            sequencingCenter_ = "";
            platformUnit_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private Experiment(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            id_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            description_ = s;
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            updated_ = s;
                            break;
                        }
                        case 50: {
                            String s = input.readStringRequireUtf8();

                            runTime_ = s;
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();

                            molecule_ = s;
                            break;
                        }
                        case 66: {
                            String s = input.readStringRequireUtf8();

                            strategy_ = s;
                            break;
                        }
                        case 74: {
                            String s = input.readStringRequireUtf8();

                            selection_ = s;
                            break;
                        }
                        case 82: {
                            String s = input.readStringRequireUtf8();

                            library_ = s;
                            break;
                        }
                        case 90: {
                            String s = input.readStringRequireUtf8();

                            libraryLayout_ = s;
                            break;
                        }
                        case 98: {
                            String s = input.readStringRequireUtf8();

                            instrumentModel_ = s;
                            break;
                        }
                        case 106: {
                            String s = input.readStringRequireUtf8();

                            instrumentDataFile_ = s;
                            break;
                        }
                        case 114: {
                            String s = input.readStringRequireUtf8();

                            sequencingCenter_ = s;
                            break;
                        }
                        case 122: {
                            String s = input.readStringRequireUtf8();

                            platformUnit_ = s;
                            break;
                        }
                        case 138: {
                            Shared.Attributes.Builder subBuilder = null;
                            if (attributes_ != null) {
                                subBuilder = attributes_.toBuilder();
                            }
                            attributes_ = input.readMessage(Shared.Attributes.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(attributes_);
                                attributes_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 146: {
                            Shared.GeoLocation.Builder subBuilder = null;
                            if (location_ != null) {
                                subBuilder = location_.toBuilder();
                            }
                            location_ = input.readMessage(Shared.GeoLocation.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(location_);
                                location_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Assaymetadata.internal_static_ga4ghmetadata_Experiment_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Assaymetadata.internal_static_ga4ghmetadata_Experiment_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Assaymetadata.Experiment.class, Assaymetadata.Experiment.Builder.class);
        }

        public static final int ID_FIELD_NUMBER = 1;
        private volatile Object id_;

        /**
         * <pre>
         * The experiment ID
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public String getId() {
            Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                id_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The experiment ID
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIdBytes() {
            Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int NAME_FIELD_NUMBER = 2;
        private volatile Object name_;

        /**
         * <pre>
         * The name of the experiment.
         * </pre>
         *
         * <code>string name = 2;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The name of the experiment.
         * </pre>
         *
         * <code>string name = 2;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DESCRIPTION_FIELD_NUMBER = 3;
        private volatile Object description_;

        /**
         * <pre>
         * A description of the experiment.
         * </pre>
         *
         * <code>string description = 3;</code>
         */
        public String getDescription() {
            Object ref = description_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                description_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * A description of the experiment.
         * </pre>
         *
         * <code>string description = 3;</code>
         */
        public com.google.protobuf.ByteString
        getDescriptionBytes() {
            Object ref = description_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                description_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int UPDATED_FIELD_NUMBER = 5;
        private volatile Object updated_;

        /**
         * <pre>
         * The time at which the record of this experiment was last updated.
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        public String getUpdated() {
            Object ref = updated_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                updated_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The time at which the record of this experiment was last updated.
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        public com.google.protobuf.ByteString
        getUpdatedBytes() {
            Object ref = updated_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                updated_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int RUN_TIME_FIELD_NUMBER = 6;
        private volatile Object runTime_;

        /**
         * <pre>
         * The time at which this experiment was performed.
         * Granularity here is variable (e.g. date only).
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
         * </pre>
         *
         * <code>string run_time = 6;</code>
         */
        public String getRunTime() {
            Object ref = runTime_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                runTime_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The time at which this experiment was performed.
         * Granularity here is variable (e.g. date only).
         * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
         * </pre>
         *
         * <code>string run_time = 6;</code>
         */
        public com.google.protobuf.ByteString
        getRunTimeBytes() {
            Object ref = runTime_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                runTime_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MOLECULE_FIELD_NUMBER = 7;
        private volatile Object molecule_;

        /**
         * <pre>
         * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
         * </pre>
         *
         * <code>string molecule = 7;</code>
         */
        public String getMolecule() {
            Object ref = molecule_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                molecule_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
         * </pre>
         *
         * <code>string molecule = 7;</code>
         */
        public com.google.protobuf.ByteString
        getMoleculeBytes() {
            Object ref = molecule_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                molecule_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int STRATEGY_FIELD_NUMBER = 8;
        private volatile Object strategy_;

        /**
         * <pre>
         * The experiment technique or strategy applied to the sample.
         * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
         * </pre>
         *
         * <code>string strategy = 8;</code>
         */
        public String getStrategy() {
            Object ref = strategy_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                strategy_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The experiment technique or strategy applied to the sample.
         * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
         * </pre>
         *
         * <code>string strategy = 8;</code>
         */
        public com.google.protobuf.ByteString
        getStrategyBytes() {
            Object ref = strategy_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                strategy_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SELECTION_FIELD_NUMBER = 9;
        private volatile Object selection_;

        /**
         * <pre>
         * The method used to enrich the target. (e.g. immunoprecipitation, size
         * fractionation, MNase digestion)
         * </pre>
         *
         * <code>string selection = 9;</code>
         */
        public String getSelection() {
            Object ref = selection_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                selection_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The method used to enrich the target. (e.g. immunoprecipitation, size
         * fractionation, MNase digestion)
         * </pre>
         *
         * <code>string selection = 9;</code>
         */
        public com.google.protobuf.ByteString
        getSelectionBytes() {
            Object ref = selection_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                selection_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int LIBRARY_FIELD_NUMBER = 10;
        private volatile Object library_;

        /**
         * <pre>
         * The name of the library used as part of this experiment.
         * </pre>
         *
         * <code>string library = 10;</code>
         */
        public String getLibrary() {
            Object ref = library_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                library_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The name of the library used as part of this experiment.
         * </pre>
         *
         * <code>string library = 10;</code>
         */
        public com.google.protobuf.ByteString
        getLibraryBytes() {
            Object ref = library_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                library_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int LIBRARY_LAYOUT_FIELD_NUMBER = 11;
        private volatile Object libraryLayout_;

        /**
         * <pre>
         * The configuration of sequenced reads. (e.g. Single or Paired).
         * </pre>
         *
         * <code>string library_layout = 11;</code>
         */
        public String getLibraryLayout() {
            Object ref = libraryLayout_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                libraryLayout_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The configuration of sequenced reads. (e.g. Single or Paired).
         * </pre>
         *
         * <code>string library_layout = 11;</code>
         */
        public com.google.protobuf.ByteString
        getLibraryLayoutBytes() {
            Object ref = libraryLayout_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                libraryLayout_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int INSTRUMENT_MODEL_FIELD_NUMBER = 12;
        private volatile Object instrumentModel_;

        /**
         * <pre>
         * The instrument model used as part of this experiment.
         * This maps to sequencing technology in BAM.
         * </pre>
         *
         * <code>string instrument_model = 12;</code>
         */
        public String getInstrumentModel() {
            Object ref = instrumentModel_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                instrumentModel_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The instrument model used as part of this experiment.
         * This maps to sequencing technology in BAM.
         * </pre>
         *
         * <code>string instrument_model = 12;</code>
         */
        public com.google.protobuf.ByteString
        getInstrumentModelBytes() {
            Object ref = instrumentModel_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                instrumentModel_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int INSTRUMENT_DATA_FILE_FIELD_NUMBER = 13;
        private volatile Object instrumentDataFile_;

        /**
         * <pre>
         * The data file generated by the instrument.
         * TODO: This isn't actually a file is it?
         * Should this be `instrumentData` instead?
         * </pre>
         *
         * <code>string instrument_data_file = 13;</code>
         */
        public String getInstrumentDataFile() {
            Object ref = instrumentDataFile_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                instrumentDataFile_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The data file generated by the instrument.
         * TODO: This isn't actually a file is it?
         * Should this be `instrumentData` instead?
         * </pre>
         *
         * <code>string instrument_data_file = 13;</code>
         */
        public com.google.protobuf.ByteString
        getInstrumentDataFileBytes() {
            Object ref = instrumentDataFile_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                instrumentDataFile_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SEQUENCING_CENTER_FIELD_NUMBER = 14;
        private volatile Object sequencingCenter_;

        /**
         * <pre>
         * Name of the laboratory where this experiment was performed.
         * </pre>
         *
         * <code>string sequencing_center = 14;</code>
         */
        public String getSequencingCenter() {
            Object ref = sequencingCenter_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                sequencingCenter_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Name of the laboratory where this experiment was performed.
         * </pre>
         *
         * <code>string sequencing_center = 14;</code>
         */
        public com.google.protobuf.ByteString
        getSequencingCenterBytes() {
            Object ref = sequencingCenter_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                sequencingCenter_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int LOCATION_FIELD_NUMBER = 18;
        private Shared.GeoLocation location_;

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        public boolean hasLocation() {
            return location_ != null;
        }

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        public Shared.GeoLocation getLocation() {
            return location_ == null ? Shared.GeoLocation.getDefaultInstance() : location_;
        }

        /**
         * <pre>
         * The address coded as geolocation object of the laboratory.
         * </pre>
         *
         * <code>.GeoLocation location = 18;</code>
         */
        public Shared.GeoLocationOrBuilder getLocationOrBuilder() {
            return getLocation();
        }

        public static final int PLATFORM_UNIT_FIELD_NUMBER = 15;
        private volatile Object platformUnit_;

        /**
         * <pre>
         * The platform unit used as part of this experiment. This is a
         * flowcell-barcode
         * or slide unique identifier.
         * </pre>
         *
         * <code>string platform_unit = 15;</code>
         */
        public String getPlatformUnit() {
            Object ref = platformUnit_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                platformUnit_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The platform unit used as part of this experiment. This is a
         * flowcell-barcode
         * or slide unique identifier.
         * </pre>
         *
         * <code>string platform_unit = 15;</code>
         */
        public com.google.protobuf.ByteString
        getPlatformUnitBytes() {
            Object ref = platformUnit_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                platformUnit_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ATTRIBUTES_FIELD_NUMBER = 17;
        private Shared.Attributes attributes_;

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        public boolean hasAttributes() {
            return attributes_ != null;
        }

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        public Shared.Attributes getAttributes() {
            return attributes_ == null ? Shared.Attributes.getDefaultInstance() : attributes_;
        }

        /**
         * <pre>
         * A map of additional experiment information.
         * </pre>
         *
         * <code>.Attributes attributes = 17;</code>
         */
        public Shared.AttributesOrBuilder getAttributesOrBuilder() {
            return getAttributes();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIdBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
            }
            if (!getDescriptionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
            }
            if (!getUpdatedBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, updated_);
            }
            if (!getRunTimeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, runTime_);
            }
            if (!getMoleculeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, molecule_);
            }
            if (!getStrategyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 8, strategy_);
            }
            if (!getSelectionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 9, selection_);
            }
            if (!getLibraryBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 10, library_);
            }
            if (!getLibraryLayoutBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, libraryLayout_);
            }
            if (!getInstrumentModelBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 12, instrumentModel_);
            }
            if (!getInstrumentDataFileBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 13, instrumentDataFile_);
            }
            if (!getSequencingCenterBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 14, sequencingCenter_);
            }
            if (!getPlatformUnitBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 15, platformUnit_);
            }
            if (attributes_ != null) {
                output.writeMessage(17, getAttributes());
            }
            if (location_ != null) {
                output.writeMessage(18, getLocation());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIdBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
            }
            if (!getDescriptionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
            }
            if (!getUpdatedBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, updated_);
            }
            if (!getRunTimeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, runTime_);
            }
            if (!getMoleculeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, molecule_);
            }
            if (!getStrategyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, strategy_);
            }
            if (!getSelectionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, selection_);
            }
            if (!getLibraryBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, library_);
            }
            if (!getLibraryLayoutBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, libraryLayout_);
            }
            if (!getInstrumentModelBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, instrumentModel_);
            }
            if (!getInstrumentDataFileBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, instrumentDataFile_);
            }
            if (!getSequencingCenterBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, sequencingCenter_);
            }
            if (!getPlatformUnitBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, platformUnit_);
            }
            if (attributes_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(17, getAttributes());
            }
            if (location_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(18, getLocation());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Assaymetadata.Experiment)) {
                return super.equals(obj);
            }
            Assaymetadata.Experiment other = (Assaymetadata.Experiment) obj;

            boolean result = true;
            result = result && getId()
                    .equals(other.getId());
            result = result && getName()
                    .equals(other.getName());
            result = result && getDescription()
                    .equals(other.getDescription());
            result = result && getUpdated()
                    .equals(other.getUpdated());
            result = result && getRunTime()
                    .equals(other.getRunTime());
            result = result && getMolecule()
                    .equals(other.getMolecule());
            result = result && getStrategy()
                    .equals(other.getStrategy());
            result = result && getSelection()
                    .equals(other.getSelection());
            result = result && getLibrary()
                    .equals(other.getLibrary());
            result = result && getLibraryLayout()
                    .equals(other.getLibraryLayout());
            result = result && getInstrumentModel()
                    .equals(other.getInstrumentModel());
            result = result && getInstrumentDataFile()
                    .equals(other.getInstrumentDataFile());
            result = result && getSequencingCenter()
                    .equals(other.getSequencingCenter());
            result = result && (hasLocation() == other.hasLocation());
            if (hasLocation()) {
                result = result && getLocation()
                        .equals(other.getLocation());
            }
            result = result && getPlatformUnit()
                    .equals(other.getPlatformUnit());
            result = result && (hasAttributes() == other.hasAttributes());
            if (hasAttributes()) {
                result = result && getAttributes()
                        .equals(other.getAttributes());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
            hash = (53 * hash) + getDescription().hashCode();
            hash = (37 * hash) + UPDATED_FIELD_NUMBER;
            hash = (53 * hash) + getUpdated().hashCode();
            hash = (37 * hash) + RUN_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getRunTime().hashCode();
            hash = (37 * hash) + MOLECULE_FIELD_NUMBER;
            hash = (53 * hash) + getMolecule().hashCode();
            hash = (37 * hash) + STRATEGY_FIELD_NUMBER;
            hash = (53 * hash) + getStrategy().hashCode();
            hash = (37 * hash) + SELECTION_FIELD_NUMBER;
            hash = (53 * hash) + getSelection().hashCode();
            hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
            hash = (53 * hash) + getLibrary().hashCode();
            hash = (37 * hash) + LIBRARY_LAYOUT_FIELD_NUMBER;
            hash = (53 * hash) + getLibraryLayout().hashCode();
            hash = (37 * hash) + INSTRUMENT_MODEL_FIELD_NUMBER;
            hash = (53 * hash) + getInstrumentModel().hashCode();
            hash = (37 * hash) + INSTRUMENT_DATA_FILE_FIELD_NUMBER;
            hash = (53 * hash) + getInstrumentDataFile().hashCode();
            hash = (37 * hash) + SEQUENCING_CENTER_FIELD_NUMBER;
            hash = (53 * hash) + getSequencingCenter().hashCode();
            if (hasLocation()) {
                hash = (37 * hash) + LOCATION_FIELD_NUMBER;
                hash = (53 * hash) + getLocation().hashCode();
            }
            hash = (37 * hash) + PLATFORM_UNIT_FIELD_NUMBER;
            hash = (53 * hash) + getPlatformUnit().hashCode();
            if (hasAttributes()) {
                hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
                hash = (53 * hash) + getAttributes().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Assaymetadata.Experiment parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Assaymetadata.Experiment parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Assaymetadata.Experiment parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Assaymetadata.Experiment parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Assaymetadata.Experiment parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Assaymetadata.Experiment parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Assaymetadata.Experiment parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Assaymetadata.Experiment parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Assaymetadata.Experiment parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Assaymetadata.Experiment parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Assaymetadata.Experiment prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * An experimental preparation of a sample.
         * </pre>
         * <p>
         * Protobuf type {@code Experiment}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:Experiment)
                Assaymetadata.ExperimentOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Assaymetadata.internal_static_ga4ghmetadata_Experiment_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Assaymetadata.internal_static_ga4ghmetadata_Experiment_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Assaymetadata.Experiment.class, Assaymetadata.Experiment.Builder.class);
            }

            // Construct using Assaymetadata.Experiment.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                id_ = "";

                name_ = "";

                description_ = "";

                updated_ = "";

                runTime_ = "";

                molecule_ = "";

                strategy_ = "";

                selection_ = "";

                library_ = "";

                libraryLayout_ = "";

                instrumentModel_ = "";

                instrumentDataFile_ = "";

                sequencingCenter_ = "";

                if (locationBuilder_ == null) {
                    location_ = null;
                } else {
                    location_ = null;
                    locationBuilder_ = null;
                }
                platformUnit_ = "";

                if (attributesBuilder_ == null) {
                    attributes_ = null;
                } else {
                    attributes_ = null;
                    attributesBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Assaymetadata.internal_static_ga4ghmetadata_Experiment_descriptor;
            }

            public Assaymetadata.Experiment getDefaultInstanceForType() {
                return Assaymetadata.Experiment.getDefaultInstance();
            }

            public Assaymetadata.Experiment build() {
                Assaymetadata.Experiment result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Assaymetadata.Experiment buildPartial() {
                Assaymetadata.Experiment result = new Assaymetadata.Experiment(this);
                result.id_ = id_;
                result.name_ = name_;
                result.description_ = description_;
                result.updated_ = updated_;
                result.runTime_ = runTime_;
                result.molecule_ = molecule_;
                result.strategy_ = strategy_;
                result.selection_ = selection_;
                result.library_ = library_;
                result.libraryLayout_ = libraryLayout_;
                result.instrumentModel_ = instrumentModel_;
                result.instrumentDataFile_ = instrumentDataFile_;
                result.sequencingCenter_ = sequencingCenter_;
                if (locationBuilder_ == null) {
                    result.location_ = location_;
                } else {
                    result.location_ = locationBuilder_.build();
                }
                result.platformUnit_ = platformUnit_;
                if (attributesBuilder_ == null) {
                    result.attributes_ = attributes_;
                } else {
                    result.attributes_ = attributesBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Assaymetadata.Experiment) {
                    return mergeFrom((Assaymetadata.Experiment) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Assaymetadata.Experiment other) {
                if (other == Assaymetadata.Experiment.getDefaultInstance()) return this;
                if (!other.getId().isEmpty()) {
                    id_ = other.id_;
                    onChanged();
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getDescription().isEmpty()) {
                    description_ = other.description_;
                    onChanged();
                }
                if (!other.getUpdated().isEmpty()) {
                    updated_ = other.updated_;
                    onChanged();
                }
                if (!other.getRunTime().isEmpty()) {
                    runTime_ = other.runTime_;
                    onChanged();
                }
                if (!other.getMolecule().isEmpty()) {
                    molecule_ = other.molecule_;
                    onChanged();
                }
                if (!other.getStrategy().isEmpty()) {
                    strategy_ = other.strategy_;
                    onChanged();
                }
                if (!other.getSelection().isEmpty()) {
                    selection_ = other.selection_;
                    onChanged();
                }
                if (!other.getLibrary().isEmpty()) {
                    library_ = other.library_;
                    onChanged();
                }
                if (!other.getLibraryLayout().isEmpty()) {
                    libraryLayout_ = other.libraryLayout_;
                    onChanged();
                }
                if (!other.getInstrumentModel().isEmpty()) {
                    instrumentModel_ = other.instrumentModel_;
                    onChanged();
                }
                if (!other.getInstrumentDataFile().isEmpty()) {
                    instrumentDataFile_ = other.instrumentDataFile_;
                    onChanged();
                }
                if (!other.getSequencingCenter().isEmpty()) {
                    sequencingCenter_ = other.sequencingCenter_;
                    onChanged();
                }
                if (other.hasLocation()) {
                    mergeLocation(other.getLocation());
                }
                if (!other.getPlatformUnit().isEmpty()) {
                    platformUnit_ = other.platformUnit_;
                    onChanged();
                }
                if (other.hasAttributes()) {
                    mergeAttributes(other.getAttributes());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Assaymetadata.Experiment parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Assaymetadata.Experiment) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object id_ = "";

            /**
             * <pre>
             * The experiment ID
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public String getId() {
                Object ref = id_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The experiment ID
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The experiment ID
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder setId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The experiment ID
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder clearId() {

                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The experiment ID
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                id_ = value;
                onChanged();
                return this;
            }

            private Object name_ = "";

            /**
             * <pre>
             * The name of the experiment.
             * </pre>
             *
             * <code>string name = 2;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The name of the experiment.
             * </pre>
             *
             * <code>string name = 2;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of the experiment.
             * </pre>
             *
             * <code>string name = 2;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the experiment.
             * </pre>
             *
             * <code>string name = 2;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the experiment.
             * </pre>
             *
             * <code>string name = 2;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private Object description_ = "";

            /**
             * <pre>
             * A description of the experiment.
             * </pre>
             *
             * <code>string description = 3;</code>
             */
            public String getDescription() {
                Object ref = description_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    description_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * A description of the experiment.
             * </pre>
             *
             * <code>string description = 3;</code>
             */
            public com.google.protobuf.ByteString
            getDescriptionBytes() {
                Object ref = description_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    description_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A description of the experiment.
             * </pre>
             *
             * <code>string description = 3;</code>
             */
            public Builder setDescription(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                description_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A description of the experiment.
             * </pre>
             *
             * <code>string description = 3;</code>
             */
            public Builder clearDescription() {

                description_ = getDefaultInstance().getDescription();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A description of the experiment.
             * </pre>
             *
             * <code>string description = 3;</code>
             */
            public Builder setDescriptionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                description_ = value;
                onChanged();
                return this;
            }

            private Object updated_ = "";

            /**
             * <pre>
             * The time at which the record of this experiment was last updated.
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public String getUpdated() {
                Object ref = updated_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    updated_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The time at which the record of this experiment was last updated.
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public com.google.protobuf.ByteString
            getUpdatedBytes() {
                Object ref = updated_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    updated_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The time at which the record of this experiment was last updated.
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder setUpdated(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                updated_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which the record of this experiment was last updated.
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder clearUpdated() {

                updated_ = getDefaultInstance().getUpdated();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which the record of this experiment was last updated.
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder setUpdatedBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                updated_ = value;
                onChanged();
                return this;
            }

            private Object runTime_ = "";

            /**
             * <pre>
             * The time at which this experiment was performed.
             * Granularity here is variable (e.g. date only).
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
             * </pre>
             *
             * <code>string run_time = 6;</code>
             */
            public String getRunTime() {
                Object ref = runTime_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    runTime_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The time at which this experiment was performed.
             * Granularity here is variable (e.g. date only).
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
             * </pre>
             *
             * <code>string run_time = 6;</code>
             */
            public com.google.protobuf.ByteString
            getRunTimeBytes() {
                Object ref = runTime_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    runTime_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The time at which this experiment was performed.
             * Granularity here is variable (e.g. date only).
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
             * </pre>
             *
             * <code>string run_time = 6;</code>
             */
            public Builder setRunTime(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                runTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this experiment was performed.
             * Granularity here is variable (e.g. date only).
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
             * </pre>
             *
             * <code>string run_time = 6;</code>
             */
            public Builder clearRunTime() {

                runTime_ = getDefaultInstance().getRunTime();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this experiment was performed.
             * Granularity here is variable (e.g. date only).
             * Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
             * </pre>
             *
             * <code>string run_time = 6;</code>
             */
            public Builder setRunTimeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                runTime_ = value;
                onChanged();
                return this;
            }

            private Object molecule_ = "";

            /**
             * <pre>
             * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
             * </pre>
             *
             * <code>string molecule = 7;</code>
             */
            public String getMolecule() {
                Object ref = molecule_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    molecule_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
             * </pre>
             *
             * <code>string molecule = 7;</code>
             */
            public com.google.protobuf.ByteString
            getMoleculeBytes() {
                Object ref = molecule_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    molecule_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
             * </pre>
             *
             * <code>string molecule = 7;</code>
             */
            public Builder setMolecule(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                molecule_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
             * </pre>
             *
             * <code>string molecule = 7;</code>
             */
            public Builder clearMolecule() {

                molecule_ = getDefaultInstance().getMolecule();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
             * </pre>
             *
             * <code>string molecule = 7;</code>
             */
            public Builder setMoleculeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                molecule_ = value;
                onChanged();
                return this;
            }

            private Object strategy_ = "";

            /**
             * <pre>
             * The experiment technique or strategy applied to the sample.
             * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
             * </pre>
             *
             * <code>string strategy = 8;</code>
             */
            public String getStrategy() {
                Object ref = strategy_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    strategy_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The experiment technique or strategy applied to the sample.
             * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
             * </pre>
             *
             * <code>string strategy = 8;</code>
             */
            public com.google.protobuf.ByteString
            getStrategyBytes() {
                Object ref = strategy_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    strategy_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The experiment technique or strategy applied to the sample.
             * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
             * </pre>
             *
             * <code>string strategy = 8;</code>
             */
            public Builder setStrategy(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                strategy_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The experiment technique or strategy applied to the sample.
             * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
             * </pre>
             *
             * <code>string strategy = 8;</code>
             */
            public Builder clearStrategy() {

                strategy_ = getDefaultInstance().getStrategy();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The experiment technique or strategy applied to the sample.
             * (e.g. whole genome sequencing, RNA-seq, RIP-seq)
             * </pre>
             *
             * <code>string strategy = 8;</code>
             */
            public Builder setStrategyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                strategy_ = value;
                onChanged();
                return this;
            }

            private Object selection_ = "";

            /**
             * <pre>
             * The method used to enrich the target. (e.g. immunoprecipitation, size
             * fractionation, MNase digestion)
             * </pre>
             *
             * <code>string selection = 9;</code>
             */
            public String getSelection() {
                Object ref = selection_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    selection_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The method used to enrich the target. (e.g. immunoprecipitation, size
             * fractionation, MNase digestion)
             * </pre>
             *
             * <code>string selection = 9;</code>
             */
            public com.google.protobuf.ByteString
            getSelectionBytes() {
                Object ref = selection_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    selection_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The method used to enrich the target. (e.g. immunoprecipitation, size
             * fractionation, MNase digestion)
             * </pre>
             *
             * <code>string selection = 9;</code>
             */
            public Builder setSelection(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                selection_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The method used to enrich the target. (e.g. immunoprecipitation, size
             * fractionation, MNase digestion)
             * </pre>
             *
             * <code>string selection = 9;</code>
             */
            public Builder clearSelection() {

                selection_ = getDefaultInstance().getSelection();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The method used to enrich the target. (e.g. immunoprecipitation, size
             * fractionation, MNase digestion)
             * </pre>
             *
             * <code>string selection = 9;</code>
             */
            public Builder setSelectionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                selection_ = value;
                onChanged();
                return this;
            }

            private Object library_ = "";

            /**
             * <pre>
             * The name of the library used as part of this experiment.
             * </pre>
             *
             * <code>string library = 10;</code>
             */
            public String getLibrary() {
                Object ref = library_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    library_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The name of the library used as part of this experiment.
             * </pre>
             *
             * <code>string library = 10;</code>
             */
            public com.google.protobuf.ByteString
            getLibraryBytes() {
                Object ref = library_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    library_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of the library used as part of this experiment.
             * </pre>
             *
             * <code>string library = 10;</code>
             */
            public Builder setLibrary(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                library_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the library used as part of this experiment.
             * </pre>
             *
             * <code>string library = 10;</code>
             */
            public Builder clearLibrary() {

                library_ = getDefaultInstance().getLibrary();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the library used as part of this experiment.
             * </pre>
             *
             * <code>string library = 10;</code>
             */
            public Builder setLibraryBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                library_ = value;
                onChanged();
                return this;
            }

            private Object libraryLayout_ = "";

            /**
             * <pre>
             * The configuration of sequenced reads. (e.g. Single or Paired).
             * </pre>
             *
             * <code>string library_layout = 11;</code>
             */
            public String getLibraryLayout() {
                Object ref = libraryLayout_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    libraryLayout_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The configuration of sequenced reads. (e.g. Single or Paired).
             * </pre>
             *
             * <code>string library_layout = 11;</code>
             */
            public com.google.protobuf.ByteString
            getLibraryLayoutBytes() {
                Object ref = libraryLayout_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    libraryLayout_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The configuration of sequenced reads. (e.g. Single or Paired).
             * </pre>
             *
             * <code>string library_layout = 11;</code>
             */
            public Builder setLibraryLayout(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                libraryLayout_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The configuration of sequenced reads. (e.g. Single or Paired).
             * </pre>
             *
             * <code>string library_layout = 11;</code>
             */
            public Builder clearLibraryLayout() {

                libraryLayout_ = getDefaultInstance().getLibraryLayout();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The configuration of sequenced reads. (e.g. Single or Paired).
             * </pre>
             *
             * <code>string library_layout = 11;</code>
             */
            public Builder setLibraryLayoutBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                libraryLayout_ = value;
                onChanged();
                return this;
            }

            private Object instrumentModel_ = "";

            /**
             * <pre>
             * The instrument model used as part of this experiment.
             * This maps to sequencing technology in BAM.
             * </pre>
             *
             * <code>string instrument_model = 12;</code>
             */
            public String getInstrumentModel() {
                Object ref = instrumentModel_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    instrumentModel_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The instrument model used as part of this experiment.
             * This maps to sequencing technology in BAM.
             * </pre>
             *
             * <code>string instrument_model = 12;</code>
             */
            public com.google.protobuf.ByteString
            getInstrumentModelBytes() {
                Object ref = instrumentModel_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    instrumentModel_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The instrument model used as part of this experiment.
             * This maps to sequencing technology in BAM.
             * </pre>
             *
             * <code>string instrument_model = 12;</code>
             */
            public Builder setInstrumentModel(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                instrumentModel_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The instrument model used as part of this experiment.
             * This maps to sequencing technology in BAM.
             * </pre>
             *
             * <code>string instrument_model = 12;</code>
             */
            public Builder clearInstrumentModel() {

                instrumentModel_ = getDefaultInstance().getInstrumentModel();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The instrument model used as part of this experiment.
             * This maps to sequencing technology in BAM.
             * </pre>
             *
             * <code>string instrument_model = 12;</code>
             */
            public Builder setInstrumentModelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                instrumentModel_ = value;
                onChanged();
                return this;
            }

            private Object instrumentDataFile_ = "";

            /**
             * <pre>
             * The data file generated by the instrument.
             * TODO: This isn't actually a file is it?
             * Should this be `instrumentData` instead?
             * </pre>
             *
             * <code>string instrument_data_file = 13;</code>
             */
            public String getInstrumentDataFile() {
                Object ref = instrumentDataFile_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    instrumentDataFile_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The data file generated by the instrument.
             * TODO: This isn't actually a file is it?
             * Should this be `instrumentData` instead?
             * </pre>
             *
             * <code>string instrument_data_file = 13;</code>
             */
            public com.google.protobuf.ByteString
            getInstrumentDataFileBytes() {
                Object ref = instrumentDataFile_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    instrumentDataFile_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The data file generated by the instrument.
             * TODO: This isn't actually a file is it?
             * Should this be `instrumentData` instead?
             * </pre>
             *
             * <code>string instrument_data_file = 13;</code>
             */
            public Builder setInstrumentDataFile(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                instrumentDataFile_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The data file generated by the instrument.
             * TODO: This isn't actually a file is it?
             * Should this be `instrumentData` instead?
             * </pre>
             *
             * <code>string instrument_data_file = 13;</code>
             */
            public Builder clearInstrumentDataFile() {

                instrumentDataFile_ = getDefaultInstance().getInstrumentDataFile();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The data file generated by the instrument.
             * TODO: This isn't actually a file is it?
             * Should this be `instrumentData` instead?
             * </pre>
             *
             * <code>string instrument_data_file = 13;</code>
             */
            public Builder setInstrumentDataFileBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                instrumentDataFile_ = value;
                onChanged();
                return this;
            }

            private Object sequencingCenter_ = "";

            /**
             * <pre>
             * Name of the laboratory where this experiment was performed.
             * </pre>
             *
             * <code>string sequencing_center = 14;</code>
             */
            public String getSequencingCenter() {
                Object ref = sequencingCenter_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    sequencingCenter_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * Name of the laboratory where this experiment was performed.
             * </pre>
             *
             * <code>string sequencing_center = 14;</code>
             */
            public com.google.protobuf.ByteString
            getSequencingCenterBytes() {
                Object ref = sequencingCenter_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    sequencingCenter_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Name of the laboratory where this experiment was performed.
             * </pre>
             *
             * <code>string sequencing_center = 14;</code>
             */
            public Builder setSequencingCenter(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                sequencingCenter_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Name of the laboratory where this experiment was performed.
             * </pre>
             *
             * <code>string sequencing_center = 14;</code>
             */
            public Builder clearSequencingCenter() {

                sequencingCenter_ = getDefaultInstance().getSequencingCenter();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Name of the laboratory where this experiment was performed.
             * </pre>
             *
             * <code>string sequencing_center = 14;</code>
             */
            public Builder setSequencingCenterBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                sequencingCenter_ = value;
                onChanged();
                return this;
            }

            private Shared.GeoLocation location_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.GeoLocation, Shared.GeoLocation.Builder, Shared.GeoLocationOrBuilder> locationBuilder_;

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public boolean hasLocation() {
                return locationBuilder_ != null || location_ != null;
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Shared.GeoLocation getLocation() {
                if (locationBuilder_ == null) {
                    return location_ == null ? Shared.GeoLocation.getDefaultInstance() : location_;
                } else {
                    return locationBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Builder setLocation(Shared.GeoLocation value) {
                if (locationBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    location_ = value;
                    onChanged();
                } else {
                    locationBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Builder setLocation(
                    Shared.GeoLocation.Builder builderForValue) {
                if (locationBuilder_ == null) {
                    location_ = builderForValue.build();
                    onChanged();
                } else {
                    locationBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Builder mergeLocation(Shared.GeoLocation value) {
                if (locationBuilder_ == null) {
                    if (location_ != null) {
                        location_ =
                                Shared.GeoLocation.newBuilder(location_).mergeFrom(value).buildPartial();
                    } else {
                        location_ = value;
                    }
                    onChanged();
                } else {
                    locationBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Builder clearLocation() {
                if (locationBuilder_ == null) {
                    location_ = null;
                    onChanged();
                } else {
                    location_ = null;
                    locationBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Shared.GeoLocation.Builder getLocationBuilder() {

                onChanged();
                return getLocationFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            public Shared.GeoLocationOrBuilder getLocationOrBuilder() {
                if (locationBuilder_ != null) {
                    return locationBuilder_.getMessageOrBuilder();
                } else {
                    return location_ == null ?
                            Shared.GeoLocation.getDefaultInstance() : location_;
                }
            }

            /**
             * <pre>
             * The address coded as geolocation object of the laboratory.
             * </pre>
             *
             * <code>.GeoLocation location = 18;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.GeoLocation, Shared.GeoLocation.Builder, Shared.GeoLocationOrBuilder>
            getLocationFieldBuilder() {
                if (locationBuilder_ == null) {
                    locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Shared.GeoLocation, Shared.GeoLocation.Builder, Shared.GeoLocationOrBuilder>(
                            getLocation(),
                            getParentForChildren(),
                            isClean());
                    location_ = null;
                }
                return locationBuilder_;
            }

            private Object platformUnit_ = "";

            /**
             * <pre>
             * The platform unit used as part of this experiment. This is a
             * flowcell-barcode
             * or slide unique identifier.
             * </pre>
             *
             * <code>string platform_unit = 15;</code>
             */
            public String getPlatformUnit() {
                Object ref = platformUnit_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    platformUnit_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The platform unit used as part of this experiment. This is a
             * flowcell-barcode
             * or slide unique identifier.
             * </pre>
             *
             * <code>string platform_unit = 15;</code>
             */
            public com.google.protobuf.ByteString
            getPlatformUnitBytes() {
                Object ref = platformUnit_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    platformUnit_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The platform unit used as part of this experiment. This is a
             * flowcell-barcode
             * or slide unique identifier.
             * </pre>
             *
             * <code>string platform_unit = 15;</code>
             */
            public Builder setPlatformUnit(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                platformUnit_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The platform unit used as part of this experiment. This is a
             * flowcell-barcode
             * or slide unique identifier.
             * </pre>
             *
             * <code>string platform_unit = 15;</code>
             */
            public Builder clearPlatformUnit() {

                platformUnit_ = getDefaultInstance().getPlatformUnit();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The platform unit used as part of this experiment. This is a
             * flowcell-barcode
             * or slide unique identifier.
             * </pre>
             *
             * <code>string platform_unit = 15;</code>
             */
            public Builder setPlatformUnitBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                platformUnit_ = value;
                onChanged();
                return this;
            }

            private Shared.Attributes attributes_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder> attributesBuilder_;

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public boolean hasAttributes() {
                return attributesBuilder_ != null || attributes_ != null;
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Shared.Attributes getAttributes() {
                if (attributesBuilder_ == null) {
                    return attributes_ == null ? Shared.Attributes.getDefaultInstance() : attributes_;
                } else {
                    return attributesBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Builder setAttributes(Shared.Attributes value) {
                if (attributesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    attributes_ = value;
                    onChanged();
                } else {
                    attributesBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Builder setAttributes(
                    Shared.Attributes.Builder builderForValue) {
                if (attributesBuilder_ == null) {
                    attributes_ = builderForValue.build();
                    onChanged();
                } else {
                    attributesBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Builder mergeAttributes(Shared.Attributes value) {
                if (attributesBuilder_ == null) {
                    if (attributes_ != null) {
                        attributes_ =
                                Shared.Attributes.newBuilder(attributes_).mergeFrom(value).buildPartial();
                    } else {
                        attributes_ = value;
                    }
                    onChanged();
                } else {
                    attributesBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Builder clearAttributes() {
                if (attributesBuilder_ == null) {
                    attributes_ = null;
                    onChanged();
                } else {
                    attributes_ = null;
                    attributesBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Shared.Attributes.Builder getAttributesBuilder() {

                onChanged();
                return getAttributesFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            public Shared.AttributesOrBuilder getAttributesOrBuilder() {
                if (attributesBuilder_ != null) {
                    return attributesBuilder_.getMessageOrBuilder();
                } else {
                    return attributes_ == null ?
                            Shared.Attributes.getDefaultInstance() : attributes_;
                }
            }

            /**
             * <pre>
             * A map of additional experiment information.
             * </pre>
             *
             * <code>.Attributes attributes = 17;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder>
            getAttributesFieldBuilder() {
                if (attributesBuilder_ == null) {
                    attributesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder>(
                            getAttributes(),
                            getParentForChildren(),
                            isClean());
                    attributes_ = null;
                }
                return attributesBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:Experiment)
        }

        // @@protoc_insertion_point(class_scope:Experiment)
        private static final Assaymetadata.Experiment DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Assaymetadata.Experiment();
        }

        public static Assaymetadata.Experiment getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Experiment>
                PARSER = new com.google.protobuf.AbstractParser<Experiment>() {
            public Experiment parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Experiment(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Experiment> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Experiment> getParserForType() {
            return PARSER;
        }

        public Assaymetadata.Experiment getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface AnalysisOrBuilder extends
            // @@protoc_insertion_point(interface_extends:Analysis)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Formats of id | name | description | accessions are described in the
         * documentation on general attributes and formats.
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        String getId();

        /**
         * <pre>
         * Formats of id | name | description | accessions are described in the
         * documentation on general attributes and formats.
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        com.google.protobuf.ByteString
        getIdBytes();

        /**
         * <code>string name = 2;</code>
         */
        String getName();

        /**
         * <code>string name = 2;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <code>string description = 3;</code>
         */
        String getDescription();

        /**
         * <code>string description = 3;</code>
         */
        com.google.protobuf.ByteString
        getDescriptionBytes();

        /**
         * <pre>
         * The time at which this record was created, in ISO 8601 format.
         * </pre>
         *
         * <code>string created = 4;</code>
         */
        String getCreated();

        /**
         * <pre>
         * The time at which this record was created, in ISO 8601 format.
         * </pre>
         *
         * <code>string created = 4;</code>
         */
        com.google.protobuf.ByteString
        getCreatedBytes();

        /**
         * <pre>
         * The time at which this record was last updated, in ISO 8601 format.
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        String getUpdated();

        /**
         * <pre>
         * The time at which this record was last updated, in ISO 8601 format.
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        com.google.protobuf.ByteString
        getUpdatedBytes();

        /**
         * <pre>
         * The type of analysis.
         * </pre>
         *
         * <code>string type = 6;</code>
         */
        String getType();

        /**
         * <pre>
         * The type of analysis.
         * </pre>
         *
         * <code>string type = 6;</code>
         */
        com.google.protobuf.ByteString
        getTypeBytes();

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        java.util.List<String>
        getSoftwareList();

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        int getSoftwareCount();

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        String getSoftware(int index);

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        com.google.protobuf.ByteString
        getSoftwareBytes(int index);

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        boolean hasAttributes();

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        Shared.Attributes getAttributes();

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        Shared.AttributesOrBuilder getAttributesOrBuilder();
    }

    /**
     * <pre>
     * An analysis contains an interpretation of one or several experiments. (e.g.
     * SNVs, copy number variations, methylation status) together with information
     * about the methodology used.
     * </pre>
     * <p>
     * Protobuf type {@code Analysis}
     */
    public static final class Analysis extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:Analysis)
            AnalysisOrBuilder {
        // Use Analysis.newBuilder() to construct.
        private Analysis(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Analysis() {
            id_ = "";
            name_ = "";
            description_ = "";
            created_ = "";
            updated_ = "";
            type_ = "";
            software_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private Analysis(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            id_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            description_ = s;
                            break;
                        }
                        case 34: {
                            String s = input.readStringRequireUtf8();

                            created_ = s;
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            updated_ = s;
                            break;
                        }
                        case 50: {
                            String s = input.readStringRequireUtf8();

                            type_ = s;
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                software_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            software_.add(s);
                            break;
                        }
                        case 74: {
                            Shared.Attributes.Builder subBuilder = null;
                            if (attributes_ != null) {
                                subBuilder = attributes_.toBuilder();
                            }
                            attributes_ = input.readMessage(Shared.Attributes.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(attributes_);
                                attributes_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    software_ = software_.getUnmodifiableView();
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Assaymetadata.internal_static_ga4ghmetadata_Analysis_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Assaymetadata.internal_static_ga4ghmetadata_Analysis_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Assaymetadata.Analysis.class, Assaymetadata.Analysis.Builder.class);
        }

        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private volatile Object id_;

        /**
         * <pre>
         * Formats of id | name | description | accessions are described in the
         * documentation on general attributes and formats.
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public String getId() {
            Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                id_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Formats of id | name | description | accessions are described in the
         * documentation on general attributes and formats.
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIdBytes() {
            Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int NAME_FIELD_NUMBER = 2;
        private volatile Object name_;

        /**
         * <code>string name = 2;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <code>string name = 2;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DESCRIPTION_FIELD_NUMBER = 3;
        private volatile Object description_;

        /**
         * <code>string description = 3;</code>
         */
        public String getDescription() {
            Object ref = description_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                description_ = s;
                return s;
            }
        }

        /**
         * <code>string description = 3;</code>
         */
        public com.google.protobuf.ByteString
        getDescriptionBytes() {
            Object ref = description_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                description_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int CREATED_FIELD_NUMBER = 4;
        private volatile Object created_;

        /**
         * <pre>
         * The time at which this record was created, in ISO 8601 format.
         * </pre>
         *
         * <code>string created = 4;</code>
         */
        public String getCreated() {
            Object ref = created_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                created_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The time at which this record was created, in ISO 8601 format.
         * </pre>
         *
         * <code>string created = 4;</code>
         */
        public com.google.protobuf.ByteString
        getCreatedBytes() {
            Object ref = created_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                created_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int UPDATED_FIELD_NUMBER = 5;
        private volatile Object updated_;

        /**
         * <pre>
         * The time at which this record was last updated, in ISO 8601 format.
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        public String getUpdated() {
            Object ref = updated_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                updated_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The time at which this record was last updated, in ISO 8601 format.
         * </pre>
         *
         * <code>string updated = 5;</code>
         */
        public com.google.protobuf.ByteString
        getUpdatedBytes() {
            Object ref = updated_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                updated_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TYPE_FIELD_NUMBER = 6;
        private volatile Object type_;

        /**
         * <pre>
         * The type of analysis.
         * </pre>
         *
         * <code>string type = 6;</code>
         */
        public String getType() {
            Object ref = type_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                type_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The type of analysis.
         * </pre>
         *
         * <code>string type = 6;</code>
         */
        public com.google.protobuf.ByteString
        getTypeBytes() {
            Object ref = type_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                type_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SOFTWARE_FIELD_NUMBER = 7;
        private com.google.protobuf.LazyStringList software_;

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getSoftwareList() {
            return software_;
        }

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        public int getSoftwareCount() {
            return software_.size();
        }

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        public String getSoftware(int index) {
            return software_.get(index);
        }

        /**
         * <pre>
         * The software run to generate this analysis.
         * </pre>
         *
         * <code>repeated string software = 7;</code>
         */
        public com.google.protobuf.ByteString
        getSoftwareBytes(int index) {
            return software_.getByteString(index);
        }

        public static final int ATTRIBUTES_FIELD_NUMBER = 9;
        private Shared.Attributes attributes_;

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        public boolean hasAttributes() {
            return attributes_ != null;
        }

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        public Shared.Attributes getAttributes() {
            return attributes_ == null ? Shared.Attributes.getDefaultInstance() : attributes_;
        }

        /**
         * <pre>
         * A map of additional analysis information.
         * </pre>
         *
         * <code>.Attributes attributes = 9;</code>
         */
        public Shared.AttributesOrBuilder getAttributesOrBuilder() {
            return getAttributes();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getIdBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
            }
            if (!getDescriptionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
            }
            if (!getCreatedBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, created_);
            }
            if (!getUpdatedBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, updated_);
            }
            if (!getTypeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, type_);
            }
            for (int i = 0; i < software_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, software_.getRaw(i));
            }
            if (attributes_ != null) {
                output.writeMessage(9, getAttributes());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getIdBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
            }
            if (!getDescriptionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
            }
            if (!getCreatedBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, created_);
            }
            if (!getUpdatedBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, updated_);
            }
            if (!getTypeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, type_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < software_.size(); i++) {
                    dataSize += computeStringSizeNoTag(software_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getSoftwareList().size();
            }
            if (attributes_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, getAttributes());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Assaymetadata.Analysis)) {
                return super.equals(obj);
            }
            Assaymetadata.Analysis other = (Assaymetadata.Analysis) obj;

            boolean result = true;
            result = result && getId()
                    .equals(other.getId());
            result = result && getName()
                    .equals(other.getName());
            result = result && getDescription()
                    .equals(other.getDescription());
            result = result && getCreated()
                    .equals(other.getCreated());
            result = result && getUpdated()
                    .equals(other.getUpdated());
            result = result && getType()
                    .equals(other.getType());
            result = result && getSoftwareList()
                    .equals(other.getSoftwareList());
            result = result && (hasAttributes() == other.hasAttributes());
            if (hasAttributes()) {
                result = result && getAttributes()
                        .equals(other.getAttributes());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
            hash = (53 * hash) + getDescription().hashCode();
            hash = (37 * hash) + CREATED_FIELD_NUMBER;
            hash = (53 * hash) + getCreated().hashCode();
            hash = (37 * hash) + UPDATED_FIELD_NUMBER;
            hash = (53 * hash) + getUpdated().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getType().hashCode();
            if (getSoftwareCount() > 0) {
                hash = (37 * hash) + SOFTWARE_FIELD_NUMBER;
                hash = (53 * hash) + getSoftwareList().hashCode();
            }
            if (hasAttributes()) {
                hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
                hash = (53 * hash) + getAttributes().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Assaymetadata.Analysis parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Assaymetadata.Analysis parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Assaymetadata.Analysis parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Assaymetadata.Analysis parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Assaymetadata.Analysis parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Assaymetadata.Analysis parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Assaymetadata.Analysis parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Assaymetadata.Analysis parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Assaymetadata.Analysis parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Assaymetadata.Analysis parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Assaymetadata.Analysis prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * An analysis contains an interpretation of one or several experiments. (e.g.
         * SNVs, copy number variations, methylation status) together with information
         * about the methodology used.
         * </pre>
         * <p>
         * Protobuf type {@code Analysis}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:Analysis)
                Assaymetadata.AnalysisOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Assaymetadata.internal_static_ga4ghmetadata_Analysis_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Assaymetadata.internal_static_ga4ghmetadata_Analysis_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Assaymetadata.Analysis.class, Assaymetadata.Analysis.Builder.class);
            }

            // Construct using Assaymetadata.Analysis.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                id_ = "";

                name_ = "";

                description_ = "";

                created_ = "";

                updated_ = "";

                type_ = "";

                software_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                if (attributesBuilder_ == null) {
                    attributes_ = null;
                } else {
                    attributes_ = null;
                    attributesBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Assaymetadata.internal_static_ga4ghmetadata_Analysis_descriptor;
            }

            public Assaymetadata.Analysis getDefaultInstanceForType() {
                return Assaymetadata.Analysis.getDefaultInstance();
            }

            public Assaymetadata.Analysis build() {
                Assaymetadata.Analysis result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Assaymetadata.Analysis buildPartial() {
                Assaymetadata.Analysis result = new Assaymetadata.Analysis(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.id_ = id_;
                result.name_ = name_;
                result.description_ = description_;
                result.created_ = created_;
                result.updated_ = updated_;
                result.type_ = type_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    software_ = software_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.software_ = software_;
                if (attributesBuilder_ == null) {
                    result.attributes_ = attributes_;
                } else {
                    result.attributes_ = attributesBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Assaymetadata.Analysis) {
                    return mergeFrom((Assaymetadata.Analysis) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Assaymetadata.Analysis other) {
                if (other == Assaymetadata.Analysis.getDefaultInstance()) return this;
                if (!other.getId().isEmpty()) {
                    id_ = other.id_;
                    onChanged();
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getDescription().isEmpty()) {
                    description_ = other.description_;
                    onChanged();
                }
                if (!other.getCreated().isEmpty()) {
                    created_ = other.created_;
                    onChanged();
                }
                if (!other.getUpdated().isEmpty()) {
                    updated_ = other.updated_;
                    onChanged();
                }
                if (!other.getType().isEmpty()) {
                    type_ = other.type_;
                    onChanged();
                }
                if (!other.software_.isEmpty()) {
                    if (software_.isEmpty()) {
                        software_ = other.software_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureSoftwareIsMutable();
                        software_.addAll(other.software_);
                    }
                    onChanged();
                }
                if (other.hasAttributes()) {
                    mergeAttributes(other.getAttributes());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Assaymetadata.Analysis parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Assaymetadata.Analysis) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private Object id_ = "";

            /**
             * <pre>
             * Formats of id | name | description | accessions are described in the
             * documentation on general attributes and formats.
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public String getId() {
                Object ref = id_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * Formats of id | name | description | accessions are described in the
             * documentation on general attributes and formats.
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Formats of id | name | description | accessions are described in the
             * documentation on general attributes and formats.
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder setId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Formats of id | name | description | accessions are described in the
             * documentation on general attributes and formats.
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder clearId() {

                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Formats of id | name | description | accessions are described in the
             * documentation on general attributes and formats.
             * </pre>
             *
             * <code>string id = 1;</code>
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                id_ = value;
                onChanged();
                return this;
            }

            private Object name_ = "";

            /**
             * <code>string name = 2;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>string name = 2;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private Object description_ = "";

            /**
             * <code>string description = 3;</code>
             */
            public String getDescription() {
                Object ref = description_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    description_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>string description = 3;</code>
             */
            public com.google.protobuf.ByteString
            getDescriptionBytes() {
                Object ref = description_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    description_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string description = 3;</code>
             */
            public Builder setDescription(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                description_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string description = 3;</code>
             */
            public Builder clearDescription() {

                description_ = getDefaultInstance().getDescription();
                onChanged();
                return this;
            }

            /**
             * <code>string description = 3;</code>
             */
            public Builder setDescriptionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                description_ = value;
                onChanged();
                return this;
            }

            private Object created_ = "";

            /**
             * <pre>
             * The time at which this record was created, in ISO 8601 format.
             * </pre>
             *
             * <code>string created = 4;</code>
             */
            public String getCreated() {
                Object ref = created_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    created_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The time at which this record was created, in ISO 8601 format.
             * </pre>
             *
             * <code>string created = 4;</code>
             */
            public com.google.protobuf.ByteString
            getCreatedBytes() {
                Object ref = created_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    created_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The time at which this record was created, in ISO 8601 format.
             * </pre>
             *
             * <code>string created = 4;</code>
             */
            public Builder setCreated(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                created_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this record was created, in ISO 8601 format.
             * </pre>
             *
             * <code>string created = 4;</code>
             */
            public Builder clearCreated() {

                created_ = getDefaultInstance().getCreated();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this record was created, in ISO 8601 format.
             * </pre>
             *
             * <code>string created = 4;</code>
             */
            public Builder setCreatedBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                created_ = value;
                onChanged();
                return this;
            }

            private Object updated_ = "";

            /**
             * <pre>
             * The time at which this record was last updated, in ISO 8601 format.
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public String getUpdated() {
                Object ref = updated_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    updated_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The time at which this record was last updated, in ISO 8601 format.
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public com.google.protobuf.ByteString
            getUpdatedBytes() {
                Object ref = updated_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    updated_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The time at which this record was last updated, in ISO 8601 format.
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder setUpdated(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                updated_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this record was last updated, in ISO 8601 format.
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder clearUpdated() {

                updated_ = getDefaultInstance().getUpdated();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The time at which this record was last updated, in ISO 8601 format.
             * </pre>
             *
             * <code>string updated = 5;</code>
             */
            public Builder setUpdatedBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                updated_ = value;
                onChanged();
                return this;
            }

            private Object type_ = "";

            /**
             * <pre>
             * The type of analysis.
             * </pre>
             *
             * <code>string type = 6;</code>
             */
            public String getType() {
                Object ref = type_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * The type of analysis.
             * </pre>
             *
             * <code>string type = 6;</code>
             */
            public com.google.protobuf.ByteString
            getTypeBytes() {
                Object ref = type_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The type of analysis.
             * </pre>
             *
             * <code>string type = 6;</code>
             */
            public Builder setType(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The type of analysis.
             * </pre>
             *
             * <code>string type = 6;</code>
             */
            public Builder clearType() {

                type_ = getDefaultInstance().getType();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The type of analysis.
             * </pre>
             *
             * <code>string type = 6;</code>
             */
            public Builder setTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                type_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList software_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureSoftwareIsMutable() {
                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    software_ = new com.google.protobuf.LazyStringArrayList(software_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getSoftwareList() {
                return software_.getUnmodifiableView();
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public int getSoftwareCount() {
                return software_.size();
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public String getSoftware(int index) {
                return software_.get(index);
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public com.google.protobuf.ByteString
            getSoftwareBytes(int index) {
                return software_.getByteString(index);
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public Builder setSoftware(
                    int index, String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSoftwareIsMutable();
                software_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public Builder addSoftware(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSoftwareIsMutable();
                software_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public Builder addAllSoftware(
                    Iterable<String> values) {
                ensureSoftwareIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, software_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public Builder clearSoftware() {
                software_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The software run to generate this analysis.
             * </pre>
             *
             * <code>repeated string software = 7;</code>
             */
            public Builder addSoftwareBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureSoftwareIsMutable();
                software_.add(value);
                onChanged();
                return this;
            }

            private Shared.Attributes attributes_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder> attributesBuilder_;

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public boolean hasAttributes() {
                return attributesBuilder_ != null || attributes_ != null;
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Shared.Attributes getAttributes() {
                if (attributesBuilder_ == null) {
                    return attributes_ == null ? Shared.Attributes.getDefaultInstance() : attributes_;
                } else {
                    return attributesBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Builder setAttributes(Shared.Attributes value) {
                if (attributesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    attributes_ = value;
                    onChanged();
                } else {
                    attributesBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Builder setAttributes(
                    Shared.Attributes.Builder builderForValue) {
                if (attributesBuilder_ == null) {
                    attributes_ = builderForValue.build();
                    onChanged();
                } else {
                    attributesBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Builder mergeAttributes(Shared.Attributes value) {
                if (attributesBuilder_ == null) {
                    if (attributes_ != null) {
                        attributes_ =
                                Shared.Attributes.newBuilder(attributes_).mergeFrom(value).buildPartial();
                    } else {
                        attributes_ = value;
                    }
                    onChanged();
                } else {
                    attributesBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Builder clearAttributes() {
                if (attributesBuilder_ == null) {
                    attributes_ = null;
                    onChanged();
                } else {
                    attributes_ = null;
                    attributesBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Shared.Attributes.Builder getAttributesBuilder() {

                onChanged();
                return getAttributesFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            public Shared.AttributesOrBuilder getAttributesOrBuilder() {
                if (attributesBuilder_ != null) {
                    return attributesBuilder_.getMessageOrBuilder();
                } else {
                    return attributes_ == null ?
                            Shared.Attributes.getDefaultInstance() : attributes_;
                }
            }

            /**
             * <pre>
             * A map of additional analysis information.
             * </pre>
             *
             * <code>.Attributes attributes = 9;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder>
            getAttributesFieldBuilder() {
                if (attributesBuilder_ == null) {
                    attributesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Shared.Attributes, Shared.Attributes.Builder, Shared.AttributesOrBuilder>(
                            getAttributes(),
                            getParentForChildren(),
                            isClean());
                    attributes_ = null;
                }
                return attributesBuilder_;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:Analysis)
        }

        // @@protoc_insertion_point(class_scope:Analysis)
        private static final Assaymetadata.Analysis DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Assaymetadata.Analysis();
        }

        public static Assaymetadata.Analysis getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Analysis>
                PARSER = new com.google.protobuf.AbstractParser<Analysis>() {
            public Analysis parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Analysis(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Analysis> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Analysis> getParserForType() {
            return PARSER;
        }

        public Assaymetadata.Analysis getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ga4ghmetadata_Experiment_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ga4ghmetadata_Experiment_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ga4ghmetadata_Analysis_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ga4ghmetadata_Analysis_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\023assaymetadata.proto\022\rga4ghmetadata\032\033ga" +
                        "4gh-metadata/shared.proto\"\205\003\n\nExperiment" +
                        "\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013descriptio" +
                        "n\030\003 \001(\t\022\017\n\007updated\030\005 \001(\t\022\020\n\010run_time\030\006 \001" +
                        "(\t\022\020\n\010molecule\030\007 \001(\t\022\020\n\010strategy\030\010 \001(\t\022\021" +
                        "\n\tselection\030\t \001(\t\022\017\n\007library\030\n \001(\t\022\026\n\016li" +
                        "brary_layout\030\013 \001(\t\022\030\n\020instrument_model\030\014" +
                        " \001(\t\022\034\n\024instrument_data_file\030\r \001(\t\022\031\n\021se" +
                        "quencing_center\030\016 \001(\t\022,\n\010location\030\022 \001(\0132" +
                        "\032.GeoLocation\022\025\n\rplatform_",
                "unit\030\017 \001(\t\022-\n\nattributes\030\021 \001(\0132\031.ga4ghme" +
                        "tadata.Attributes\"\252\001\n\010Analysis\022\n\n\002id\030\001 \001" +
                        "(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\017\n" +
                        "\007created\030\004 \001(\t\022\017\n\007updated\030\005 \001(\t\022\014\n\004type\030" +
                        "\006 \001(\t\022\020\n\010software\030\007 \003(\t\022-\n\nattributes\030\t " +
                        "\001(\0132\031.Attributesb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                Shared.getDescriptor(),
                        }, assigner);
        internal_static_ga4ghmetadata_Experiment_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_ga4ghmetadata_Experiment_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ga4ghmetadata_Experiment_descriptor,
                new String[]{"Id", "Name", "Description", "Updated", "RunTime", "Molecule", "Strategy", "Selection", "Library", "LibraryLayout", "InstrumentModel", "InstrumentDataFile", "SequencingCenter", "Location", "PlatformUnit", "Attributes",});
        internal_static_ga4ghmetadata_Analysis_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_ga4ghmetadata_Analysis_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ga4ghmetadata_Analysis_descriptor,
                new String[]{"Id", "Name", "Description", "Created", "Updated", "Type", "Software", "Attributes",});
        Shared.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
